{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/refatmassoud/the-most-lucky-ball-brazilian-loteria?scriptVersionId=190008466\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"8b8c74c7","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-07-27T13:30:02.921674Z","iopub.status.busy":"2024-07-27T13:30:02.921199Z","iopub.status.idle":"2024-07-27T13:30:03.82701Z","shell.execute_reply":"2024-07-27T13:30:03.82574Z"},"papermill":{"duration":0.914512,"end_time":"2024-07-27T13:30:03.829845","exception":false,"start_time":"2024-07-27T13:30:02.915333","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/mega-senha-brazilian-loteria/mega1.xlsx\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"markdown","id":"e1544b50","metadata":{"papermill":{"duration":0.002235,"end_time":"2024-07-27T13:30:03.835079","exception":false,"start_time":"2024-07-27T13:30:03.832844","status":"completed"},"tags":[]},"source":["This code irritate over the excel table, the out come is a table of each ball, the value and the count of this value arranged by the most appeared first ..... "]},{"cell_type":"code","execution_count":2,"id":"de8506dd","metadata":{"execution":{"iopub.execute_input":"2024-07-27T13:30:03.841688Z","iopub.status.busy":"2024-07-27T13:30:03.841219Z","iopub.status.idle":"2024-07-27T13:30:04.410369Z","shell.execute_reply":"2024-07-27T13:30:04.409354Z"},"papermill":{"duration":0.575367,"end_time":"2024-07-27T13:30:04.412861","exception":false,"start_time":"2024-07-27T13:30:03.837494","status":"completed"},"tags":[]},"outputs":[],"source":["import pandas as pd\n","\n","# Read the Excel file into a DataFrame\n","data = pd.read_excel(\"/kaggle/input/mega-senha-brazilian-loteria/mega1.xlsx\")"]},{"cell_type":"code","execution_count":3,"id":"a0d465af","metadata":{"execution":{"iopub.execute_input":"2024-07-27T13:30:04.41973Z","iopub.status.busy":"2024-07-27T13:30:04.419274Z","iopub.status.idle":"2024-07-27T13:30:04.441101Z","shell.execute_reply":"2024-07-27T13:30:04.440128Z"},"papermill":{"duration":0.028085,"end_time":"2024-07-27T13:30:04.443586","exception":false,"start_time":"2024-07-27T13:30:04.415501","status":"completed"},"tags":[]},"outputs":[],"source":["# Create an empty dictionary to store the value counts for each column\n","value_counts = {}\n","\n","# Iterate over each column in the DataFrame\n","for column in data.columns:\n","    # Get the value counts for the current column\n","    counts = data[column].value_counts().reset_index()\n","    counts.columns = ['Value', 'Count']\n","    # Store the value counts in the dictionary\n","    value_counts[column] = counts"]},{"cell_type":"code","execution_count":4,"id":"d27ad77a","metadata":{"execution":{"iopub.execute_input":"2024-07-27T13:30:04.450023Z","iopub.status.busy":"2024-07-27T13:30:04.449677Z","iopub.status.idle":"2024-07-27T13:30:04.462571Z","shell.execute_reply":"2024-07-27T13:30:04.461535Z"},"papermill":{"duration":0.018671,"end_time":"2024-07-27T13:30:04.464872","exception":false,"start_time":"2024-07-27T13:30:04.446201","status":"completed"},"tags":[]},"outputs":[],"source":["# Sort the value counts in each column by count in descending order\n","for column, counts in value_counts.items():\n","    counts = counts.sort_values(by='Count', ascending=False)\n","    value_counts[column] = counts"]},{"cell_type":"code","execution_count":5,"id":"3d38bf0b","metadata":{"execution":{"iopub.execute_input":"2024-07-27T13:30:04.471907Z","iopub.status.busy":"2024-07-27T13:30:04.471111Z","iopub.status.idle":"2024-07-27T13:30:04.488265Z","shell.execute_reply":"2024-07-27T13:30:04.487273Z"},"papermill":{"duration":0.023459,"end_time":"2024-07-27T13:30:04.490915","exception":false,"start_time":"2024-07-27T13:30:04.467456","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Value counts for column 'bola 1':\n","    Value  Count\n","0      28     61\n","1      35     58\n","2       4     57\n","3      49     57\n","4      32     57\n","5      47     57\n","6      44     56\n","7      30     55\n","8      53     54\n","9      46     54\n","10     25     53\n","11     19     52\n","12     59     52\n","13     20     51\n","14      2     51\n","22     43     50\n","19     10     50\n","21     11     50\n","20     27     50\n","16     13     50\n","18      6     50\n","17     17     50\n","15      7     50\n","23     51     48\n","24     24     48\n","25      5     48\n","26     38     47\n","27     56     47\n","28     54     47\n","29     60     47\n","31     45     46\n","30     42     46\n","32     36     45\n","33     33     45\n","34     31     45\n","35     37     45\n","36     29     44\n","37     34     44\n","38     22     43\n","39     39     42\n","40      9     42\n","41     50     42\n","42     41     42\n","43     14     41\n","44     12     41\n","46     55     40\n","45     16     40\n","47     52     38\n","48     57     38\n","49      1     38\n","50      3     37\n","51     26     36\n","52      8     36\n","53     21     36\n","54     58     35\n","55     23     35\n","56     48     34\n","57     18     34\n","58     40     33\n","59     15     32\n","\n","Value counts for column 'bola 2':\n","    Value  Count\n","0       5     63\n","1      10     61\n","2      32     60\n","3      53     59\n","4       8     57\n","5      39     56\n","6      17     55\n","7      42     54\n","8      11     54\n","9      49     54\n","10     56     53\n","11     21     53\n","12     33     53\n","13     41     53\n","15     43     51\n","16     45     51\n","14      3     51\n","17      6     50\n","18     26     48\n","19     54     48\n","20     22     48\n","21     23     48\n","24     40     46\n","22     12     46\n","23     48     46\n","25     37     46\n","26     58     46\n","27     50     46\n","28     18     45\n","29      1     45\n","36     46     44\n","34     29     44\n","35     16     44\n","30     44     44\n","33     27     44\n","31     36     44\n","32     15     44\n","37      9     43\n","38     51     43\n","39     59     42\n","40     30     42\n","41      4     42\n","45     52     41\n","46      2     41\n","47     28     41\n","44     13     41\n","43     47     41\n","42      7     41\n","48     25     40\n","49     34     40\n","50     19     40\n","51     35     39\n","52     55     38\n","53     14     37\n","54     57     37\n","55     31     36\n","56     38     36\n","57     20     36\n","58     24     33\n","59     60     28\n","\n","Value counts for column 'bola 3':\n","    Value  Count\n","0      27     62\n","1      56     59\n","2      34     57\n","3      41     57\n","4      18     55\n","5      58     55\n","6      38     54\n","7      23     53\n","8       2     53\n","9       4     52\n","10     30     52\n","11      1     52\n","12     29     52\n","16     37     51\n","15     54     51\n","14     24     51\n","13     19     51\n","17     35     50\n","18     12     49\n","19     13     49\n","20     43     49\n","21     42     48\n","22     28     48\n","23     59     48\n","24     53     48\n","25     11     48\n","26     48     47\n","27     52     47\n","28     51     47\n","31     20     46\n","30     57     46\n","29     44     46\n","33     36     45\n","32     17     45\n","34     14     44\n","35      8     43\n","36      6     43\n","37     16     42\n","38      5     42\n","39     10     42\n","40     32     42\n","41     55     42\n","44     25     41\n","45     60     41\n","43     33     41\n","42     46     41\n","46      3     40\n","47      9     40\n","48      7     40\n","49     21     39\n","50     49     39\n","51     15     38\n","52     40     38\n","53     31     38\n","54     47     38\n","55     45     37\n","56     50     37\n","57     39     35\n","58     22     34\n","59     26     32\n","\n","Value counts for column 'bola 4':\n","    Value  Count\n","0      37     64\n","2      60     60\n","1      29     60\n","3      10     54\n","4      11     54\n","5      36     53\n","6      53     53\n","7      54     52\n","8      43     52\n","9      23     52\n","10     41     51\n","11      1     51\n","14     18     50\n","15     34     50\n","13     28     50\n","12      5     50\n","16     13     49\n","17     51     49\n","18     31     49\n","19     46     48\n","20     25     48\n","21     33     48\n","22     38     48\n","23     58     48\n","24     40     47\n","25     44     47\n","26     16     47\n","27      4     47\n","28     20     47\n","31      7     46\n","30     35     46\n","29     30     46\n","33     52     45\n","34     55     45\n","32     50     45\n","35      9     44\n","36     42     44\n","37     49     43\n","38     17     43\n","39     27     43\n","40      8     43\n","41     59     42\n","42     57     42\n","43      2     42\n","44     14     42\n","47     32     41\n","48     39     41\n","45     15     41\n","46     24     41\n","49      6     40\n","50     26     40\n","51     45     40\n","52     47     39\n","53     48     38\n","54     19     37\n","55     56     36\n","56     22     36\n","57     21     36\n","58     12     35\n","59      3     32\n","\n","Value counts for column 'bola 5':\n","    Value  Count\n","0      35     64\n","1      10     59\n","2      16     58\n","4      44     56\n","3      45     56\n","5      42     55\n","6      52     54\n","7      24     54\n","8      34     53\n","9      38     53\n","10     14     52\n","13     50     51\n","16      9     51\n","15     12     51\n","12     47     51\n","11     28     51\n","14     33     51\n","17     13     50\n","18     46     49\n","19     60     48\n","20     36     48\n","21     20     47\n","22     53     46\n","23      6     46\n","24      5     46\n","25     51     46\n","26      4     46\n","29     40     45\n","31     43     45\n","30      3     45\n","28     23     45\n","27      2     45\n","32     37     44\n","33     59     44\n","34      7     44\n","35     57     44\n","36     30     44\n","37     32     44\n","38     11     44\n","39     31     43\n","40     29     43\n","41     56     43\n","42     17     43\n","46      8     42\n","48     58     42\n","47     18     42\n","45     25     42\n","44     48     42\n","43     54     42\n","49     49     41\n","50     15     41\n","51     41     41\n","52     27     39\n","53     19     39\n","54     39     38\n","55     21     36\n","56     22     35\n","57      1     35\n","58     26     30\n","59     55     28\n","\n","Value counts for column 'bola 6':\n","    Value  Count\n","0      23     62\n","1      53     57\n","2      33     56\n","3      30     55\n","4      16     55\n","5      57     55\n","6      10     55\n","7      17     53\n","8       5     52\n","9      34     52\n","10     22     52\n","11     27     52\n","12      8     52\n","15     52     50\n","16     25     50\n","14     39     50\n","13     38     50\n","17     46     49\n","18     24     49\n","19      3     49\n","24     14     48\n","26      4     48\n","25     32     48\n","23     56     48\n","22     42     48\n","21     48     48\n","20     41     48\n","27     40     46\n","28     49     46\n","29      6     46\n","33     36     45\n","34     51     45\n","30     37     45\n","32     50     45\n","31     26     45\n","35      2     44\n","36     19     44\n","37     20     43\n","38     13     43\n","39     45     43\n","40     31     43\n","41     54     43\n","44     58     41\n","45     11     41\n","46     44     41\n","43     15     41\n","42     12     41\n","47      1     40\n","48      9     40\n","49     43     40\n","50      7     40\n","51     18     39\n","52     60     38\n","53     55     38\n","54     47     38\n","55     59     38\n","56     29     38\n","57     35     36\n","58     28     35\n","59     21     30\n","\n"]}],"source":["# Print the value counts for each column\n","for column, counts in value_counts.items():\n","    print(f\"Value counts for column '{column}':\")\n","    print(counts)\n","    print()"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":5451067,"sourceId":9041720,"sourceType":"datasetVersion"}],"dockerImageVersionId":30746,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":4.953149,"end_time":"2024-07-27T13:30:05.013884","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-07-27T13:30:00.060735","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}